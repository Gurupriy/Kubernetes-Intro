---
# https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
apiVersion: v1
kind: Namespace
metadata:
  name: clmel
---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cisco-live-demo-deployment
  namespace: clmel
  labels:
    app: cisco-live-demo
spec:
  # How many copies of each pod do we want?
  replicas: 3

  # Which pods are managed by this deployment?
  selector:
    # This must match the labels we set on the pod!
    matchLabels:
      app: cisco-live-demo

  # This template field is a regular pod configuration 
  # nested inside the deployment spec
  template:
    metadata:
      # Set labels on the pod.
      # This is used in the deployment selector.
      labels:
        app: cisco-live-demo
    spec:
      containers:
      - name: cisco-live-demo-k8s
        image: mipetrin/hello:latest
        ports:
        - containerPort: 5000
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: cisco-live-demo-deployment-service
  namespace: clmel
spec:
  # Expose the service on a static port on each node
  # so that we can access the service from outside the cluster 
  type: NodePort

  # When the node receives a request on the static port (30123)
  # "select pods with the label 'app' set to 'cisco-live-demo'"
  # and forward the request to one of them
  selector:
    app: cisco-live-demo
  ports:
    # Three types of ports for a service
    # nodePort - a static port assigned on each the node (optional). 
    #    - Could let K8s automatically assign one in the range 30000 - 32767 
    # port - port exposed internally in the cluster
    # targetPort - the container port to send requests to
    - protocol: TCP
      port: 5000
      nodePort: 30123